[tool.poetry]
name = "learning-postgresql"
version = "0.1.0"
description = ""
authors = ["Fredrik Averpil <fredrik.averpil@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.10"
pytest = "^7.2.0"
pytest-randomly = "^3.12.0"
psycopg2-binary = "^2.9.3"
peewee = "^3.15.4"

[tool.poetry.group.dev.dependencies]
black = "*"
mypy = "*"
ruff = "*"


[tool.ruff]
src = ["src", "tests"]
line-length = 88  # black default
select = [
    "E",  # pycodestyle (supersedes pep8)
    "W",  # pycodestyle warnings
    # "D",  # pydocstyle
    "F",  # pyflakes
    "UP", # pyupgrade
    "S",  # flake8-bandit
    "B",  # flake8-bugbear
    "I",  # isort
    "N",  # pep8-naming
    "ERA",  # eradicate
    "C4",  # flake8-comprehensions
    "A",  # flake8-builtins
    "Q",  # flake8-quotes
    "YTT",  # flake8-2020
    # "ANN",  # flake8-annotations
    "BLE",  # flake8-blind-except
    "FBT",  # flake8-boolean-trap
    "C90",  # mccabe
    "T10",  # flake8-debugger
    "EM",  # flake8-errmsg
    "ICN",  # flake8-import-conventions
    "T20",  # flake8-print
    "RET",  # flake8-return
    "SIM",  # flake8-simplify
    "TID",  # flake8-tidy-imports
    "ARG",  # flake8-unused-arguments
    "PDV",  # pandas-vet
    "PGH",  # pygrep-hooks
    "PLC",  # pylint
    "PLE",  # pylint
    "PLR",  # pylint
    "PLW",  # pylint
    "RUF",  # ruff-specific rules

]
ignore = []

[tool.ruff.per-file-ignores]
"tests/*" = [
    "S101",  # assert used
    "S105"  # hardcoded password
]

[tool.pytest.ini_options]
testpaths = "tests"

[tool.isort]
profile = "black"
line_length = "120"

[[tool.mypy.overrides]]
module = [
    "playhouse.*",
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
